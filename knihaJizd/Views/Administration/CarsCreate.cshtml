@model knihaJizd.Models.Cars

@{
    ViewBag.Title = "Create";
}

<script>
    function previewFile(id) {
        var preview = document.getElementById(id + 'Image');
        var hidden = document.getElementById(id);
        var file = document.getElementById(id + 'Input').files[0];
        var reader = new FileReader();

        reader.addEventListener("load", function () {
            var canvas = document.createElement('canvas');
            var image = new Image();
            image.src = reader.result;

            var max_width = 200;
            var max_height = 200;
            var width = image.width;
            var height = image.height;

            // calculate the width and height, constraining the proportions
            if (width > height) {
                if (width > max_width) {
                    height = Math.round(height *= max_width / width);
                    width = max_width;
                }
            } else {
                if (height > max_height) {
                    width = Math.round(width *= max_height / height);
                    height = max_height;
                }
            }

            canvas.width = width;
            canvas.height = height;
            var ctx = canvas.getContext("2d");
            ctx.drawImage(image, 0, 0, width, height);


            preview.src = canvas.toDataURL("image/jpeg", 0.7);
            hidden.value = canvas.toDataURL("image/jpeg", 0.7);
            preview.style.display = "inline";

        }, false);

        if (file) {
            reader.readAsDataURL(file);

        }
    }
</script>

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Cars</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SPZ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SPZ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SPZ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.HiddenFor(model => model.Photo, new { @id = "Photo" })
                <input type="file" onchange="previewFile('Photo')" id="PhotoInput" accept="image/jpeg"><br>
            </div>
            <div class="col-md-5">
                <img src="" alt="Image preview..." style="display: none;" id="PhotoImage">
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
